rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // 🔐 Get role from users/{uid}
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isEmployee() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employee';
    }

    // 📄 USERS Collection
    match /users/{uid} {
      allow read, write: if request.auth != null && (
        request.auth.uid == uid || isAdmin()
      );
    }

    // 📌 POLICIES (read-only for all)
    match /policies/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // 🗓️ EVENTS (read-only for all)
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // 🔔 NOTIFICATIONS
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // 🕒 ATTENDANCE
    match /attendance/{uid} {
      allow read: if request.auth != null && (
        request.auth.uid == uid || isAdmin()
      );

      allow write: if request.auth != null && (
        // Admin can write any
        isAdmin()
        ||
        // Employee can only update their own document
        (
          request.auth.uid == uid &&
          isEmployee() &&
          canEmployeeMarkAttendance(uid)
        )
      );
    }

    // 💰 SALARY SLIPS
    match /salary_slips/{uid} {
      allow read: if request.auth != null && (
        request.auth.uid == uid || isAdmin()
      );

      allow write: if isAdmin(); // Only admin can add/edit
    }
  }
}
